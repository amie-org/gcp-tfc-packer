name: Build and Deploy

on:
    push:
        tags: ["v[0-9].[0-9]+.[0-9]+"]
        branches:
            - "development"
            - "staging"
            - "main"
    workflow_dispatch:

env:
    HCP_CLIENT_ID: ${{ secrets.HCP_CLIENT_ID }}
    HCP_CLIENT_SECRET: ${{ secrets.HCP_CLIENT_SECRET }}
    HCP_PROJECT_ID: ${{ secrets.HCP_PROJECT_ID }}
    HCP_ORGANIZATION_ID: ${{ secrets.HCP_ORGANIZATION_ID }}
    HCP_BUCKET_NAME: "learn-packer-github-actions"
    GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

jobs:
    retrieve-secret:
        runs-on: ubuntu-latest
        permissions:
            id-token: write
            contents: read
        steps:
            - name: Retrieve role_id from Vault
              uses: hashicorp/vault-action@v2.4.0
              with:
                  exportToken: true
                  method: jwt
                  url: https://vaultcluster-public-vault-4e04a4d0.810def75.z1.hashicorp.cloud:8200
                  namespace: admin
                  role: github-actions # vault role name
                  secrets: secret/data/ci/github-actions hello # vault secret path, vault-actions will set hello as HELLO=value in env variable

            - name: Get role_id from Vault
              run: |
                  role_id=$(curl -s -H "X-Vault-Token: $VAULT_TOKEN" -H "X-Vault-Namespace: admin" "https://vaultcluster-public-vault-4e04a4d0.810def75.z1.hashicorp.cloud:8200/v1/auth/approle/role/web-app-vault-agent/role-id" | jq -r '.data.role_id')
                  echo "role_id: $role_id" ; vault token: $VAULT_TOKEN ;

    build-image:
        name: Build
        runs-on: ubuntu-latest
        needs: ["retrieve-secret"]
        outputs:
            iteration_id: ${{ steps.hcp.outputs.iteration_id }}
        steps:
            - name: Checkout Repository
              uses: "actions/checkout@v4"

            # https://github.com/google-github-actions/auth
            - id: "auth"
              name: "Authenticate to Google Cloud"
              uses: "google-github-actions/auth@v1"
              with:
                  credentials_json: ${{ env.GOOGLE_CREDENTIALS }}

            # to install packer (needed only for local testing)
            # https://github.com/hashicorp/setup-packer
            - name: Setup `packer`
              uses: hashicorp/setup-packer@main
              id: setup
              with:
                  version: "latest"

            - name: Packer Init
              working-directory: packer
              run: packer init .

            - name: Packer Build - Branches
              working-directory: packer
              if: startsWith(github.ref, 'refs/heads/')
              run: packer build .

            - name: Packer Build - Tags
              working-directory: packer
              if: startsWith(github.ref, 'refs/tags/v')
              run: HCP_PACKER_BUILD_FINGERPRINT=$(date +'%m%d%YT%H%M%S') packer build .

            - name: Get HCP Packer Iteration ID from Packer Manifest
              working-directory: packer
              id: hcp
              run: |
                  last_run_uuid=$(jq -r '.last_run_uuid' "./packer_manifest.json")
                  build=$(jq -r '.builds[] | select(.packer_run_uuid == "'"$last_run_uuid"'")' "./packer_manifest.json")
                  iteration_id=$(echo "$build" | jq -r '.custom_data.iteration_id')
                  echo "::set-output name=iteration_id::$iteration_id"

    update-hcp-packer-channel:
        name: Update HCP Packer channel
        needs: ["build-image"]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: "actions/checkout@v4"

            - name: Create and set channel
              working-directory: .github/scripts
              # passes 3 arguments into the shell script: HCP Bucket name, channel name and iteration id
              run: |
                  channel_name=$( echo ${{github.ref_name}} | sed 's/\./-/g')
                  ./create_channel_iteration.sh $HCP_BUCKET_NAME $channel_name "${{ needs.build-image.outputs.iteration_id }}"
